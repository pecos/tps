#!/usr/bin/env bats
# -*- mode: sh -*-

TEST="cyl3d"
RUNFILE="input.4iters.cyl"

setup() {
    SOLN_FILE=restart_output.sol.h5
    REF_FILE=ref_solns/cyl3d_coarse.4iters.h5
}

@test "[$TEST] check for input file $RUNFILE" {
    test -s $RUNFILE
}

@test "[$TEST] run tps with input -> $RUNFILE" {
    rm -f $SOLN_FILE
    ../src/tps --runFile $RUNFILE

    test -s $SOLN_FILE
}

@test "[$TEST] verify tps output with input -> $RUNFILE" {

    test -s $SOLN_FILE
    test -s $REF_FILE
    ./soln_differ $SOLN_FILE $REF_FILE
}

@test "[$TEST] verify git sha in HDF5 file" {

    test -s $SOLN_FILE
    run h5dump  -a revision restart_output.sol.h5
    [[ "${status}" -eq 0 ]]

    # disabling following bit since developer may be testing prior to commit
#     hdf_dump=$output
#
#     run git log -1 --format="%h"
#     if [ $? -eq 0 ];then
# 	sha=${lines[0]}
# 	[[ "${hdf_dump}" =~ "\"$sha\"" ]]
#     fi
}

@test "[$TEST] verify exit code if restart files missing" {
    RUNFILE=input.4iters.restart.cyl

    rm -f $SOLN_FILE

    # following should exit with error
    run ../src/tps --runFile $RUNFILE
    [[ "${status}" -eq 1 ]]
    [[ "${output}" =~ "Unable to access desired restart file" ]]
}

@test "[$TEST] verify consistent solution with restart from 2 iters" {
    RUNFILE=input.2iters.cyl

    rm -f $SOLN_FILE
    test -s $RUNFILE
    ../src/tps --runFile $RUNFILE
    test -s $SOLN_FILE

    run h5dump  -a iteration  restart_output.sol.h5
    [ "${lines[5]}" = "   (0): 2" ]

    RUNFILE=input.4iters.restart.cyl
    ../src/tps --runFile $RUNFILE
    ./soln_differ $SOLN_FILE $REF_FILE
}

@test "[$TEST] verify tps output after variable p restart" {
    RUNFILE=input.4iters.cyl

    rm -f $SOLN_FILE
    test -s $RUNFILE
    ../src/tps --runFile $RUNFILE
    test -s $SOLN_FILE

    run h5dump  -a iteration  restart_output.sol.h5
    [ "${lines[5]}" = "   (0): 4" ]

    run h5dump  -a order  restart_output.sol.h5
    [ "${lines[5]}" = "   (0): 1" ]

    VARPLOG=varp.log
    rm -f $VARPLOG
    RUNFILE=input.8iters.restart.newp.cyl
    ../src/tps --runFile $RUNFILE >& $VARPLOG

    #intErr=$(cat $VARPLOG | grep "interpolation error" | awk '{print $6}')
    # Line grabs the printed interpolation error norm, which I'd like
    # to compare against a tolerance.  But bc isn't available in
    # current container it seems, so I'm not doing this now.

    run h5dump  -a iteration  restart_output.sol.h5
    [ "${lines[5]}" = "   (0): 8" ]

    run h5dump  -a order  restart_output.sol.h5
    [ "${lines[5]}" = "   (0): 2" ]

    REF_FILE=ref_solns/cyl3d_coarse.8iters.varp.h5
    test -s $REF_FILE
    ./soln_differ $SOLN_FILE $REF_FILE
}

@test "[$TEST] verify serial restart file consistent with 1, 2, and 4 mpi tasks" {
    RUNFILE=input.2iters.cyl
    RUNFILE_PART=input.2iters.cyl.part

    rm -f $RUNFILE_PART

    SOLN_FILE=restart_output.sol.h5
    SOLN_FILE_0=restart_output.sol.0.h5
    SOLN_FILE_1=restart_output.sol.1task.h5
    SOLN_FILE_2=restart_output.sol.2task.h5
    SOLN_FILE_4=restart_output.sol.4task.h5

    rm -f $SOLN_FILE
    rm -f $SOLN_FILE_1
    rm -f $SOLN_FILE_2
    rm -f $SOLN_FILE_4

    # copy the run file, b/c I want to edit it
    test -s $RUNFILE
    cp $RUNFILE $RUNFILE_PART

    # add partition info to the runfile
    echo "SINGLE_RESTART_FILE" >> $RUNFILE_PART
    echo "PART_FILE meshes/cyl-tet-coarse-part1.txt" >> $RUNFILE_PART

    # run 1 task
    mpirun -np 1 ../src/tps --runFile $RUNFILE_PART
    test -s $SOLN_FILE
    mv $SOLN_FILE $SOLN_FILE_1

    # switch partition file
    sed -i s/part1/part2/ $RUNFILE_PART

    # run 2 tasks
    mpirun -np 2 ../src/tps --runFile $RUNFILE_PART
    test -s $SOLN_FILE_0
    mv $SOLN_FILE_0 $SOLN_FILE_2

    ./soln_differ $SOLN_FILE_1 $SOLN_FILE_2

    # switch partition file
    sed -i s/part2/part4/ $RUNFILE_PART

    # run 4 tasks
    mpirun -np 4 ../src/tps --runFile $RUNFILE_PART
    test -s $SOLN_FILE_0
    mv $SOLN_FILE_0 $SOLN_FILE_4

    ./soln_differ $SOLN_FILE_1 $SOLN_FILE_4

    # clean up if we got this far
    rm -f $RUNFILE_PART
    rm -f restart_output.sol.*.h5
}
