# Example TPS runtime inputs

[solver]
type = flow    # options are [flow, em, coupled (TODO)]

[flow]
mesh = square_periodic_mesh.msh
order = 3
integrationRule = 1
basisType = 1
maxIters = 10500
outputFreq = 100
useRoe = 1
enableSummationByParts = 1
viscosityMultiplier = 45000.
bulkViscosityMultiplier = 5.
refLength = 1.
equation_system = navier-stokes
enablePressureForcing = True
pressureGrad = '8 0 0'
# support fluid presets:
# --> dry_air (default)
# --> test_binary_air
# --> user_defined
fluid = user_defined

[io]
outdirBase = euler_output
enableRestart = True
# supported restart modes:
# --> standard (default)
# --> singleFileWrite
# --> singleFileRead
# --> variableP (change polynomial order)
restartMode = variableP

[jobManagement]
enableAutoRestart = True
timeThreshold = 1000
checkFreq = 500

[averaging]
startIter = 12400
sampleFreq = 20
saveMeanHist = True
enableContinuation = True

[time]
cfl = 0.12
enableConstantTimestep = True
# possible time integators
# --> forwardEuler
# --> RK2, RK3, RK4, RK6
integrator = rk4

[initialConditions]
rho = 1.2
rhoU = 30.
rhoV = 0.
rhoW = 0.
pressure = 101300

[viscosityMultiplierFunction]
isEnabled = False
norm = 'n1 n2 n3'
p0 = 'x0 y0 z0'
pInit = 'xi yi zi'
viscosityRatio = 50.

[spongezone]
normal = 'n1 n2 n3'
p0 = 'x0 y0 z0'
pInit = 'xi yi zi'
isEnabled = False
type = userDef
density = rho
uvw = 'u v w'
pressure = p

[boundaryConditions]
numWalls = 0
numInlets = 0
numOutlets = 0

[boundaryConditions/inlet1]
patch = 5
# available inlet types
# --> subsonic
# --> nonReflecting
# --> nonReflectingConstEntropy
type = subsonic
density = 1.2
uvw = '30 0 0'

[boundaryConditions/outlet1]
patch = 5
# available outlet types
# --> subsonicPressure
# --> nonReflectingPressure
# --> nonReflectingMassFlow
# --> nonReflectingPointBasedMassFlow
type = subsonicPressure
pressure = 101300

[boundaryConditions/wall1]
patch = 8
# available wall BC types
# --> inviscid
# --> viscous_adiabatic
# --> viscous_isothermal
type = inviscid

[boundaryConditions/wall2]
patch = 9
type = viscous_isothermal
temperature = 430

[passiveScalars]
numScalars = 1

[passiveScalar1]
xyz = '0. 0. 0.'
radius = 0.1
value = 1

[plasma_models]
ambipolar = True
two_temperature = False
# available gas_model types
# --> perfect_mixture
gas_model = perfect_mixture
# No available models yet for transport/chemistry model.
transport_model = n/a
chemistry_model = n/a

[atoms]
numAtoms = 2

[atoms/atom1]
name = 'Ar'
mass = 39.948e-3

[atoms/atom2]
name = 'E'
# This is not a real electron mass. For test purpose.
mass = 1.182592e-2

[species]
numSpecies = 4
background_index = 1

[species/species4]
name = 'Ar.+1'
composition = '{Ar : 1, E : -1}'
formation_energy = 1.521e6
initialMassFraction = 0.25
perfect_mixture/constant_molar_cv = 1.5
perfect_mixture/constant_molar_cp = 2.5

[species/species3]
name = 'Ar2.+1'
composition = '{Ar : 2, E : -1}'
formation_energy = 2.666e6
initialMassFraction = 0.25
perfect_mixture/constant_molar_cv = 2.5
perfect_mixture/constant_molar_cp = 3.5

[species/species2]
name = 'E'
composition = '{E : 1}'
formation_energy = 0.0
initialMassFraction = 0.25
# if gas_model is perfect_mixture, requires heat capacities from input.
# molar heat capacities in unit of universal gas constant.
perfect_mixture/constant_molar_cv = 1.5
perfect_mixture/constant_molar_cp = 2.5

[species/species1]
name = 'Ar'
composition = '{Ar : 1}'
formation_energy = 0.0
initialMassFraction = 0.25
perfect_mixture/constant_molar_cv = 1.5
perfect_mixture/constant_molar_cp = 2.5

[reactions]
number_of_reactions = 0
