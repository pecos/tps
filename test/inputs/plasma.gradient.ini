# Example TPS runtime inputs

[solver]
type = flow    # options are [flow, em, coupled (TODO)]

[flow]
mesh = beam-quad-o3-s1-r1-p.mesh
refinement_levels = 4
order = 2
integrationRule = 1
basisType = 1
maxIters = 500
outputFreq = 500
useRoe = 0
enableSummationByParts = 0
viscosityMultiplier = 45000.
bulkViscosityMultiplier = 5.
refLength = 1.
equation_system = navier-stokes
enablePressureForcing = False
pressureGrad = '8 0 0'
# support fluid presets:
# --> dry_air (default)
# --> test_binary_air
# --> user_defined
fluid = user_defined

[io]
outdirBase = argon_output

[jobManagement]
enableAutoRestart = True
timeThreshold = 1000
checkFreq = 500

[averaging]
startIter = 12400
sampleFreq = 20
saveMeanHist = True
enableContinuation = True

[time]
cfl = 0.12
enableConstantTimestep = True
dt_fixed = 1.0e-5
# possible time integators
# --> forwardEuler
# --> RK2, RK3, RK4, RK6
integrator = rk4

[initialConditions]
rho = 1.2
rhoU = 30.
rhoV = 0.
rhoW = 0.
pressure = 101300
Q1 = 1.6228
Q2 = 8.0
Q3 = 0.0
Q4 = 1.5199e5
Q5 = 0.0
Q6 = 0.0
#Q7 = 1.6228

[viscosityMultiplierFunction]
isEnabled = False
norm = 'n1 n2 n3'
p0 = 'x0 y0 z0'
pInit = 'xi yi zi'
viscosityRatio = 50.

[spongezone]
normal = 'n1 n2 n3'
p0 = 'x0 y0 z0'
pInit = 'xi yi zi'
isEnabled = False
type = userDef
density = rho
uvw = 'u v w'
pressure = p

[boundaryConditions]
numWalls = 0
numInlets = 0
numOutlets = 0

[passiveScalars]
numScalars = 0

[plasma_models]
ambipolar = True
two_temperature = True
# available gas_model types
# --> perfect_mixture
gas_model = perfect_mixture
# No available models yet for transport/chemistry model.
transport_model = constant
chemistry_model = n/a

[plasma_models/transport_model/constant]
viscosity = 1.1
bulk_viscosity = 0.3
thermal_conductivity = 0.6
electron_thermal_conductivity = 0.3
diffusivity/species1 = 3.1
diffusivity/species2 = 1.9
diffusivity/species3 = 1.3
momentum_transfer_frequency/species1 = 0.9
momentum_transfer_frequency/species2 = 4.1
momentum_transfer_frequency/species3 = 2.3

[atoms]
numAtoms = 2

[atoms/atom1]
name = 'Ar'
mass = 39.948e-3

[atoms/atom2]
name = 'E'
# This is not a real electron mass. For test purpose.
mass = 10.0e-3

[species]
numSpecies = 3
background_index = 2
#electron_index = 1

[species/species3]
name = 'Ar.+1'
composition = '{Ar : 1, E : -1}'
formation_energy = 1.521e4
initialMassFraction = 0.0
perfect_mixture/constant_molar_cv = 1.5

[species/species1]
name = 'E'
composition = '{E : 1}'
formation_energy = 0.0
initialMassFraction = 0.0
# if gas_model is perfect_mixture, requires heat capacities from input.
# molar heat capacities in unit of universal gas constant.
perfect_mixture/constant_molar_cv = 1.5

[species/species2]
name = 'Ar'
composition = '{Ar : 1}'
formation_energy = 0.0
initialMassFraction = 1.0
perfect_mixture/constant_molar_cv = 1.5

[reactions]
number_of_reactions = 1

[reactions/reaction1]
equation = 'Ar + E <=> Ar.+1 + 2 E'
reaction_energy = 1.521e4
reactant_stoichiometry = '1 1 0'
product_stoichiometry = '2 0 1'
model = arrhenius
arrhenius/A = 4.7
arrhenius/b = 1.2
arrhenius/E = 6.49e4

detailed_balance = True
equilibrium_constant/A = 1.39
equilibrium_constant/b = 0.7
equilibrium_constant/E = 6.197e2

[test/test_gradient]
filename = argon.gradient_error.txt
domain_length/x = 5.0
domain_length/y = 5.0
wavenumber/x = 2
wavenumber/y = 1
