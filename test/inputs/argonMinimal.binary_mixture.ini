# Example TPS runtime inputs

[solver]
type = flow    # options are [flow, em, coupled (TODO)]

[flow]
mesh = beam-quad-o3-s5-p.mesh
order = 3
integrationRule = 1
basisType = 1
maxIters = 1000
outputFreq = 1000
useRoe = 0
enableSummationByParts = 0
viscosityMultiplier = 45000.
bulkViscosityMultiplier = 5.
refLength = 1.
equation_system = navier-stokes
enablePressureForcing = False
pressureGrad = '8 0 0'
# support fluid presets:
# --> dry_air (default)
# --> test_binary_air
# --> user_defined
fluid = user_defined

[io]
outdirBase = argon_output
enableRestart = True
# supported restart modes:
# --> standard (default)
# --> singleFileWrite
# --> singleFileRead
# --> variableP (change polynomial order)
restartMode = standard

[jobManagement]
enableAutoRestart = True
timeThreshold = 1000
checkFreq = 500

[averaging]
startIter = 12400
sampleFreq = 20
saveMeanHist = True
enableContinuation = True

[time]
cfl = 0.12
enableConstantTimestep = True
fixed_timestep_size = 6.0e-5
# possible time integators
# --> forwardEuler
# --> RK2, RK3, RK4, RK6
integrator = rk4

[initialConditions]
rho = 1.2
rhoU = 30.
rhoV = 0.
rhoW = 0.
pressure = 101300
Q1 = 1.6228
Q2 = 8.0
Q3 = 0.0
Q4 = 1.5199e5
Q5 = 0.0
Q6 = 0.0
#Q7 = 1.6228

[viscosityMultiplierFunction]
isEnabled = False
norm = 'n1 n2 n3'
p0 = 'x0 y0 z0'
pInit = 'xi yi zi'
viscosityRatio = 50.

[spongezone]
normal = 'n1 n2 n3'
p0 = 'x0 y0 z0'
pInit = 'xi yi zi'
isEnabled = False
type = userDef
density = rho
uvw = 'u v w'
pressure = p

[boundaryConditions]
numWalls = 0
numInlets = 0
numOutlets = 0

#[boundaryConditions/inlet1]
#patch = 5
## available inlet types
## --> subsonic
## --> nonReflecting
## --> nonReflectingConstEntropy
#type = subsonic
#density = 1.2
#uvw = '30 0 0'
#
#[boundaryConditions/outlet1]
#patch = 5
## available outlet types
## --> subsonicPressure
## --> nonReflectingPressure
## --> nonReflectingMassFlow
## --> nonReflectingPointBasedMassFlow
#type = subsonicPressure
#pressure = 101300
#
#[boundaryConditions/wall1]
#patch = 8
## available wall BC types
## --> inviscid
## --> viscous_adiabatic
## --> viscous_isothermal
#type = inviscid
#
#[boundaryConditions/wall2]
#patch = 9
#type = viscous_isothermal
#temperature = 430

[passiveScalars]
numScalars = 0

#[passiveScalar1]
#xyz = '0. 0. 0.'
#radius = 0.1
#value = 1

[plasma_models]
ambipolar = False
two_temperature = False
# available gas_model types
# --> perfect_mixture
gas_model = perfect_mixture
# No available models yet for transport/chemistry model.
transport_model = argon_minimal
chemistry_model = n/a
argon_ternary/third_order_thermal_conductivity = True

[species]
numSpecies = 3
background_index = 2
#electron_index = 1

[species/species3]
name = 'Ar.+1'
molecular_weight = 39.948e-3
charge_number = 1.0
formation_energy = 1520.57e3
perfect_mixture/constant_molar_cv = 1.5
perfect_mixture/constant_molar_cp = 2.5

[species/species1]
name = 'E'
molecular_weight = 1.0e-16
charge_number = -1.0
formation_energy = 0.0
# if gas_model is perfect_mixture, requires heat capacities from input.
# molar heat capacities in unit of universal gas constant.
perfect_mixture/constant_molar_cv = 1.5
perfect_mixture/constant_molar_cp = 2.5

[species/species2]
name = 'Ar'
molecular_weight = 39.948e-3
charge_number = 0.0
formation_energy = 0.0
perfect_mixture/constant_molar_cv = 1.5
perfect_mixture/constant_molar_cp = 2.5

[utils/binary_initial_condition]
pressure = 1.0133e0
temperature = 300.0
velocity/u = 1.0
domain_length/x = 5.0
domain_length/y = 1.0
wavenumber = 2
reference_solution/time = 0.06
reference_solution/filename = argonMinimal.binary.ref.h5
