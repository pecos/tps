#!./bats
# -*- mode: sh -*-

TEST="lomach-flow"

EXE="../src/tps"

setup() {
    RUNFILE="inputs/lomach.tgv2d.ini"
    RUNFILE_p2="inputs/lomach.tgv2d.p2.ini"
    RUNFILE_MOD="inputs/lomach.tgv2d.mod.ini"
    rm -f $RUNFILE_MOD $RUNFILE_p2
}

@test "[$TEST] check convergence for 2D Taylor-Green case using p = 1" {
    # This runs a grid refinement on the 2D Taylor-Green problem using
    # p=1 elements.  We could compute a rate (as in mms.euler.test for
    # example), but it is simpler just to check that the printed error
    # is what we have observed before (which has 2nd order
    # convergence).  We observe the spatial rate here b/c, even though
    # the time step is fixed, it is small enough that the temporal
    # error is small.

    # p = 1, r = 0
    run $EXE --runFile $RUNFILE
    [[ ${output} =~ "flow L2 error = 0.102434" ]]
    echo ${output} > flow_p1_err.out

    # p = 1, r = 1
    cat $RUNFILE | sed 's/ref_levels = 0/ref_levels = 1/' > $RUNFILE_MOD
    run $EXE --runFile $RUNFILE_MOD
    [[ ${output} =~ "flow L2 error = 0.0210383" ]]
    echo ${output} >> flow_p1_err.out

    # p = 1, r = 2
    cat $RUNFILE | sed 's/ref_levels = 0/ref_levels = 2/' > $RUNFILE_MOD
    run $EXE --runFile $RUNFILE_MOD
    [[ ${output} =~ "flow L2 error = 0.00497873" ]]
    echo ${output} >> flow_p1_err.out

    rm -f $RUNFILE_MOD
}

@test "[$TEST] check convergence for 2D Taylor-Green case using p = 2" {
    # This runs a grid refinement on the 2D Taylor-Green problem using
    # p=2 elements.  Same comments as above regarding check, except
    # that rate is even higher than expected.

    cat $RUNFILE | sed 's/order = 1/order = 2/' > $RUNFILE_p2

    # p = 1, r = 0
    run $EXE --runFile $RUNFILE_p2
    [[ ${output} =~ "flow L2 error = 0.0342063" ]]
    echo ${output} > flow_p2_err.out

    # p = 1, r = 1
    cat $RUNFILE_p2 | sed 's/ref_levels = 0/ref_levels = 1/' > $RUNFILE_MOD
    run $EXE --runFile $RUNFILE_MOD
    [[ ${output} =~ "flow L2 error = 0.00750953" ]]
    echo ${output} >> flow_p2_err.out

    # p = 1, r = 2
    cat $RUNFILE_p2 | sed 's/ref_levels = 0/ref_levels = 2/' > $RUNFILE_MOD
    run $EXE --runFile $RUNFILE_MOD
    [[ ${output} =~ "flow L2 error = 0.000635744" ]]
    echo ${output} >> flow_p2_err.out

    rm -f $RUNFILE_MOD $RUNFILE_p2
}
